package manyToMany;
interface ISubject {
    void register(IObserver o);
    void unregister(IObserver o);
    void notifyObservers(int i);
}

package manyToMany;

import com.company.Observer;
import com.company.Subject;

public class ObserverPatternDemo3Ex {
    public static void main (String[] args)
    {
        System.out.println("*** Observer Pattern Demo3***\n");
        Subject1=sub1=new Subject1();
        Subject2 sub2=new Subject2();

        Observer1 ob1=new Observer1();
        Observer2 ob2=new Observer2();
        Observer3 ob3=new Observer3();

        sub1.register(ob1);
        sub1.register(ob2);


        sub2.register(ob2);
        sub2.register(ob3);

        sub1.setMyValue(50);
        System.out.println();

        sub2.setMyVAlue(250);
        System.out.println();

    }
}


package manyToMany;

public class Subject1 implements ISubject{
    private int myValue;

    public int getMyValue() {
        return myValue;
    }

    public void setMyValue(int myValue) {
        this.myValue = myValue;
        notifyObservers(myValue);
    }

    public void register(IObserver o)
    {
        observersList.add(o);

    }

    public void unregister(IObserver o)
    {
        observersList.remove(o);
    }
    public void notifyObservers(int updateValue)
    {
        for(int i=0; i<observersList.size(); i++)
        {
            observersList.get(i).update(this.getClass().getSimpleName(), updateValue);

        }
    }
}
